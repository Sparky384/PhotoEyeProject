#include "WPILib.h"
#include "Compressor.h"
#include <DigitalInput.h>
/**
 * This is a demo program showing the use of the RobotBase class.
 * The SimpleRobot class is the base of a robot application that will automatically call your
 * Autonomous and OperatorControl methods at the right time as controlled by the switches on
 * the driver station or the field controls.
 */ 
class RobotDemo : public SimpleRobot
{
	RobotDrive myRobot;
		Joystick stick1, stick2; 
		DigitalInput Photo_Eye;
		DriverStation *ds;
		DriverStationLCD *dsLCD;
	
       
public:
	RobotDemo(void):// these must be initialized in the same order as they are declared above.
		myRobot(1, 2),	
		stick1(1),
		stick2(2),
		Photo_Eye(3),
		ds(DriverStation::GetInstance()),
		dsLCD(DriverStationLCD::GetInstance())
		
	
	{
		myRobot.SetExpiration(0.1);
	}

			void Read_PE()//most likly will not work...
			{
				while(true)
				{
				dsLCD->PrintfLine(DriverStationLCD::kUser_Line2, "Photo-Eye: %d", Photo_Eye.Get());//print out digital output 
				dsLCD->UpdateLCD();
				Wait(0.1);// frequency of update time
				}
			}

	void Autonomous(void)
	{

	}


	void OperatorControl(void)
	{
		myRobot.SetSafetyEnabled(true);
		while (IsOperatorControl())
		{

			Read_PE();
			
			Wait(0.005);				// wait for a motor update time
		}
	}
};

START_ROBOT_CLASS(RobotDemo);

